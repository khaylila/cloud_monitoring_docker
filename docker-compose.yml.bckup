version: '3.8'

services:
  # Layanan untuk Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # File konfigurasi Prometheus
    networks:
      - monitoring-net

  # Layanan untuk Grafana
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - monitoring-net
    depends_on:
      - prometheus # Memastikan grafana dimulai setelah prometheus

  # Mendefinisikan layanan untuk aplikasi Anda
  monitor-app:
    # Menggunakan image yang sudah Anda build sebelumnya
    image: golang_app
    container_name: coba-monitor-app
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "9100:9100"
    # Di sinilah limit resource didefinisikan
    deploy:
      resources:
        limits:
          cpus: '0.5'   # Batas CPU 0.5 core
          memory: 512M  # Batas RAM 512 MB
    networks:
      - monitoring-net
  postgres-server:
    # Menggunakan image lokal yang sudah Anda build sebelumnya
    image: postgres_app
    container_name: postgres-app-container
    restart: unless-stopped
    environment:
      # Anda bisa mengatur password langsung di sini
      POSTGRES_PASSWORD: postgres # <-- GANTI DENGAN PASSWORD ANDA
    ports:
      - "5432:5432"
      - "9101:9100"
    volumes:
      - postgres_db_data:/var/lib/postgresql/14/main
    deploy:
      resources:
        limits:
          cpus: '0.5'   # Batas CPU 0.5 core
          memory: 512M  # Batas RAM 512 MB
    networks:
      - monitoring-net

# Mendefinisikan volume untuk persistensi data
volumes:
  postgres_db_data:
    driver: local
# Jaringan agar kedua kontainer bisa saling berkomunikasi
networks:
  monitoring-net:
    driver: bridge